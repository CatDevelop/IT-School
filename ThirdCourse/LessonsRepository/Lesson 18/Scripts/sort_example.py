# Программа демонстрирует возможности встроенных в Python функций сортировки sort() и sorted()

from random import randint

# сортировка чисел
numbers = [randint(-100, 100) for i in range(20)]
print("Массив чисел до сортировки:", numbers)

print("Сортировка по возрастанию:", sorted(numbers))
print("Сортировка по убыванию:", sorted(numbers, reverse=True))
# Каждый элемент массива передается в качестве параметра функции abs() в процессе сортировки
print("Сортировка по модулю:", sorted(numbers, key=abs))

# сортировка строк
cars = ["Форд Фокус", "Фольксваген Тигуан", "Рено Сандеро", "Пежо 307", "Пежо 407", "Рено Дастер"]
print("\nМассив строк для сортировки:", cars)
# сортировка строк в алфавитном порядке
print("Сортировка по возрастанию:", sorted(cars))
print("Сортировка по убыванию:", sorted(cars, reverse=True))
# Каждый элемент массива передается в качестве параметра функции len() в процессе сортировки
print("Сортировка по длине строки:", sorted(cars, key=len))
print("Сортировка по длине строки в обратном порядке:", sorted(cars, key=len, reverse=True))

# Сортировка списка кортежей - элементы по умолчанию сортируются в лексикографическом порядке:
# - сравниваются сначала первые элементы каждого кортежа, а если они равны – вторые элементы.
# - в результате элементы будут отсортированы на основе целых чисел, с использованием строк для дополнительной сортировки
ford_models = [(1, "Фокус"), (2, "Мондео"), (1, "Фиеста"), (3, "Куга"), (3, "Экоспорт")]
print("\nМассив кортежей до сортировки:", ford_models)
print("Сортировка в лексикографическом порядке:", sorted(ford_models))

# Мы можем принудительно сначала отсортировать список по строкам, а дополнительную сортировку выполнить по целым числам, 
# определив простую функцию, которая будет использоваться в качестве аргумента key:
def swap(t):  # принимает каждый кортеж из списка в качестве параметра в процессе декорирования списка
   return t[1], t[0]

print("Сортировка '2-ой элемент кортежа вперед':", sorted(ford_models, key=swap))

input("\n\nДля выхода нажмите Enter.")
