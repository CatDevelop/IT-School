# Скрипт для демонстрации распаковки именованных аргументов при вызовах функций

# Поместив оператор * первым в списке параметров, мы тем самым полностью запретим использование 
# любых позиционных аргументов и вынудим тех, кто будет вызывать ее, использовать именованные аргументы
# Пример такой (вымышленной) функции:
def print_setup(*, paper="Letter", copies=1, color=False):
    pass

# Мы можем вызывать функцию print_setup() без аргументов, допуская
# использование значений по умолчанию. Или изменить некоторые или
# все значения по умолчанию, например:
print_setup(paper="A4", color=True)

# Но если мы попытаемся использовать позиционные аргументы, например:
# print_setup("A4")
# то будет возбуждено исключение TypeError

# Так же, как мы распаковываем последовательности для заполнения
# позиционных параметров, можно распаковывать и словари –
# с помощью оператора распаковывания отображений (**):
options = dict(paper="A4", color=True)
print_setup(**options)
# В данном случае пары «ключ-значение» словаря options будут распакованы,
# и каждое значение будет ассоциировано с параметром, чье имя соответствует 
# ключу этого значения. Если в словаре обнаружится ключ, не совпадающий 
# ни с одним именем параметра, будет возбуждено исключение TypeError

# имеется возможность использовать оператор распаковывания именованных аргументов 
# при описании параметров в объявлении функции:
def add_person_details(passport, lastname, **kwargs):
    print("passport =", passport)
    print(" lastname =", lastname)
    for key in sorted(kwargs):
        print(" {0} = {1}".format(key, kwargs[key]))

# пример вызова функции с дополнительными именованными аргументами
add_person_details("agent007", "Bond", firstname="James", age=47)

# можно одновременно принимать переменное число позиционных аргументов
# и переменное число именованных аргументов:
def print_args(*args, **kwargs):
    for i, arg in enumerate(args):
        print("positional argument {0} = {1}".format(i, arg))
    for key in kwargs:
        print("keyword argument {0} = {1}".format(key, kwargs[key]))
